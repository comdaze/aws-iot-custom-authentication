"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BOOTSTRAP_VERSION_RESOURCE = exports.BOOTSTRAP_VERSION_OUTPUT = exports.BUCKET_DOMAIN_NAME_OUTPUT = exports.REPOSITORY_NAME_OUTPUT = exports.BUCKET_NAME_OUTPUT = void 0;
/** @experimental */
exports.BUCKET_NAME_OUTPUT = 'BucketName';
/** @experimental */
exports.REPOSITORY_NAME_OUTPUT = 'RepositoryName';
/** @experimental */
exports.BUCKET_DOMAIN_NAME_OUTPUT = 'BucketDomainName';
/** @experimental */
exports.BOOTSTRAP_VERSION_OUTPUT = 'BootstrapVersion';
/** @experimental */
exports.BOOTSTRAP_VERSION_RESOURCE = 'CdkBootstrapVersion';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9vdHN0cmFwLXByb3BzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYm9vdHN0cmFwLXByb3BzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBLG9CQUFvQjtBQUNQLFFBQUEsa0JBQWtCLEdBQUcsWUFBWSxDQUFDO0FBQy9DLG9CQUFvQjtBQUNQLFFBQUEsc0JBQXNCLEdBQUcsZ0JBQWdCLENBQUM7QUFDdkQsb0JBQW9CO0FBQ1AsUUFBQSx5QkFBeUIsR0FBRyxrQkFBa0IsQ0FBQztBQUM1RCxvQkFBb0I7QUFDUCxRQUFBLHdCQUF3QixHQUFHLGtCQUFrQixDQUFDO0FBQzNELG9CQUFvQjtBQUNQLFFBQUEsMEJBQTBCLEdBQUcscUJBQXFCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUYWcgfSBmcm9tICcuLi8uLi9jZGstdG9vbGtpdCc7XG5cbi8qKiBAZXhwZXJpbWVudGFsICovXG5leHBvcnQgY29uc3QgQlVDS0VUX05BTUVfT1VUUFVUID0gJ0J1Y2tldE5hbWUnO1xuLyoqIEBleHBlcmltZW50YWwgKi9cbmV4cG9ydCBjb25zdCBSRVBPU0lUT1JZX05BTUVfT1VUUFVUID0gJ1JlcG9zaXRvcnlOYW1lJztcbi8qKiBAZXhwZXJpbWVudGFsICovXG5leHBvcnQgY29uc3QgQlVDS0VUX0RPTUFJTl9OQU1FX09VVFBVVCA9ICdCdWNrZXREb21haW5OYW1lJztcbi8qKiBAZXhwZXJpbWVudGFsICovXG5leHBvcnQgY29uc3QgQk9PVFNUUkFQX1ZFUlNJT05fT1VUUFVUID0gJ0Jvb3RzdHJhcFZlcnNpb24nO1xuLyoqIEBleHBlcmltZW50YWwgKi9cbmV4cG9ydCBjb25zdCBCT09UU1RSQVBfVkVSU0lPTl9SRVNPVVJDRSA9ICdDZGtCb290c3RyYXBWZXJzaW9uJztcblxuLyoqXG4gKiBPcHRpb25zIGZvciB0aGUgYm9vdHN0cmFwRW52aXJvbm1lbnQgb3BlcmF0aW9uKHMpXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQm9vdHN0cmFwRW52aXJvbm1lbnRPcHRpb25zIHtcbiAgcmVhZG9ubHkgdG9vbGtpdFN0YWNrTmFtZT86IHN0cmluZztcbiAgcmVhZG9ubHkgcm9sZUFybj86IHN0cmluZztcbiAgcmVhZG9ubHkgcGFyYW1ldGVycz86IEJvb3RzdHJhcHBpbmdQYXJhbWV0ZXJzO1xuICByZWFkb25seSBmb3JjZT86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgdG8gZXhlY3V0ZSB0aGUgY2hhbmdlc2V0IG9yIG9ubHkgY3JlYXRlIGl0IGFuZCBsZWF2ZSBpdCBpbiByZXZpZXcuXG4gICAqIEBkZWZhdWx0IHRydWVcbiAgICovXG4gIHJlYWRvbmx5IGV4ZWN1dGU/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBUYWdzIGZvciBjZGt0b29sa2l0IHN0YWNrLlxuICAgKlxuICAgKiBAZGVmYXVsdCAtIE5vbmUuXG4gICAqL1xuICByZWFkb25seSB0YWdzPzogVGFnW107XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgdGhlIHN0YWNrcyBjcmVhdGVkIGJ5IHRoZSBib290c3RyYXAgcHJvY2VzcyBzaG91bGQgYmUgcHJvdGVjdGVkIGZyb20gdGVybWluYXRpb24uXG4gICAqIEBzZWUgaHR0cHM6Ly9kb2NzLmF3cy5hbWF6b24uY29tL0FXU0Nsb3VkRm9ybWF0aW9uL2xhdGVzdC9Vc2VyR3VpZGUvdXNpbmctY2ZuLXByb3RlY3Qtc3RhY2tzLmh0bWxcbiAgICogQGRlZmF1bHQgdHJ1ZVxuICAgKi9cbiAgcmVhZG9ubHkgdGVybWluYXRpb25Qcm90ZWN0aW9uPzogYm9vbGVhbjtcbn1cblxuLyoqXG4gKiBQYXJhbWV0ZXJzIGZvciB0aGUgYm9vdHN0cmFwcGluZyB0ZW1wbGF0ZVxuICovXG5leHBvcnQgaW50ZXJmYWNlIEJvb3RzdHJhcHBpbmdQYXJhbWV0ZXJzIHtcbiAgLyoqXG4gICAqIFRoZSBuYW1lIHRvIGJlIGdpdmVuIHRvIHRoZSBDREsgQm9vdHN0cmFwIGJ1Y2tldC5cbiAgICpcbiAgICogQGRlZmF1bHQgLSBhIG5hbWUgaXMgZ2VuZXJhdGVkIGJ5IENsb3VkRm9ybWF0aW9uLlxuICAgKi9cbiAgcmVhZG9ubHkgYnVja2V0TmFtZT86IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIElEIG9mIGFuIGV4aXN0aW5nIEtNUyBrZXkgdG8gYmUgdXNlZCBmb3IgZW5jcnlwdGluZyBpdGVtcyBpbiB0aGUgYnVja2V0LlxuICAgKlxuICAgKiBAZGVmYXVsdCAtIHVzZSB0aGUgZGVmYXVsdCBLTVMga2V5IG9yIGNyZWF0ZSBhIGN1c3RvbSBvbmVcbiAgICovXG4gIHJlYWRvbmx5IGttc0tleUlkPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBXaGV0aGVyIG9yIG5vdCB0byBjcmVhdGUgYSBuZXcgY3VzdG9tZXIgbWFzdGVyIGtleSAoQ01LKVxuICAgKlxuICAgKiBPbmx5IGFwcGxpZXMgdG8gbW9kZXJuIGJvb3RzdHJhcHBpbmcuIExlZ2FjeSBib290c3RyYXBwaW5nIHdpbGwgbmV2ZXIgY3JlYXRlXG4gICAqIGEgQ01LLCBvbmx5IHVzZSB0aGUgZGVmYXVsdCBTMyBrZXkuXG4gICAqXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICByZWFkb25seSBjcmVhdGVDdXN0b21lck1hc3RlcktleT86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFRoZSBsaXN0IG9mIEFXUyBhY2NvdW50IElEcyB0aGF0IGFyZSB0cnVzdGVkIHRvIGRlcGxveSBpbnRvIHRoZSBlbnZpcm9ubWVudCBiZWluZyBib290c3RyYXBwZWQuXG4gICAqXG4gICAqIEBkZWZhdWx0IC0gb25seSB0aGUgYm9vdHN0cmFwcGVkIGFjY291bnQgY2FuIGRlcGxveSBpbnRvIHRoaXMgZW52aXJvbm1lbnRcbiAgICovXG4gIHJlYWRvbmx5IHRydXN0ZWRBY2NvdW50cz86IHN0cmluZ1tdO1xuXG4gIC8qKlxuICAgKiBUaGUgQVJOcyBvZiB0aGUgSUFNIG1hbmFnZWQgcG9saWNpZXMgdGhhdCBzaG91bGQgYmUgYXR0YWNoZWQgdG8gdGhlIHJvbGUgcGVyZm9ybWluZyBDbG91ZEZvcm1hdGlvbiBkZXBsb3ltZW50cy5cbiAgICogSW4gbW9zdCBjYXNlcywgdGhpcyB3aWxsIGJlIHRoZSBBZG1pbmlzdHJhdG9yQWNjZXNzIHBvbGljeS5cbiAgICogQXQgbGVhc3Qgb25lIHBvbGljeSBpcyByZXF1aXJlZCBpZiB7QGxpbmsgdHJ1c3RlZEFjY291bnRzfSB3ZXJlIHBhc3NlZC5cbiAgICpcbiAgICogQGRlZmF1bHQgLSB0aGUgcm9sZSB3aWxsIGhhdmUgbm8gcG9saWNpZXMgYXR0YWNoZWRcbiAgICovXG4gIHJlYWRvbmx5IGNsb3VkRm9ybWF0aW9uRXhlY3V0aW9uUG9saWNpZXM/OiBzdHJpbmdbXTtcblxuICAvKipcbiAgICogSWRlbnRpZmllciB0byBkaXN0aW5ndWlzaCBtdWx0aXBsZSBib290c3RyYXBwZWQgZW52aXJvbm1lbnRzXG4gICAqXG4gICAqIEBkZWZhdWx0IC0gRGVmYXVsdCBxdWFsaWZpZXJcbiAgICovXG4gIHJlYWRvbmx5IHF1YWxpZmllcj86IHN0cmluZztcblxuICAvKipcbiAgICogV2hldGhlciBvciBub3QgdG8gZW5hYmxlIFMzIFN0YWdpbmcgQnVja2V0IFB1YmxpYyBBY2Nlc3MgQmxvY2sgQ29uZmlndXJhdGlvblxuICAgKlxuICAgKiBAZGVmYXVsdCB0cnVlXG4gICAqL1xuICByZWFkb25seSBwdWJsaWNBY2Nlc3NCbG9ja0NvbmZpZ3VyYXRpb24/OiBib29sZWFuO1xuXG59Il19