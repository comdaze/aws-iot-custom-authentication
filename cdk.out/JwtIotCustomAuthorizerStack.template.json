{
  "Parameters": {
    "username": {
      "Type": "String",
      "Default": "aladdin",
      "Description": "The username to authenticate the MQTT client"
    },
    "password": {
      "Type": "String",
      "Default": "opensesame",
      "Description": "The password to authenticate the MQTT client"
    },
    "token": {
      "Type": "String",
      "Default": "allow",
      "Description": "The password to authenticate the MQTT client"
    },
    "AssetParameterse0eb358733b9110cd7375155a65d30b763648cd8f4f00617eafdad0f0f6606e0S3Bucket30E7C93C": {
      "Type": "String",
      "Description": "S3 bucket for asset \"e0eb358733b9110cd7375155a65d30b763648cd8f4f00617eafdad0f0f6606e0\""
    },
    "AssetParameterse0eb358733b9110cd7375155a65d30b763648cd8f4f00617eafdad0f0f6606e0S3VersionKeyC9BDD468": {
      "Type": "String",
      "Description": "S3 key for asset version \"e0eb358733b9110cd7375155a65d30b763648cd8f4f00617eafdad0f0f6606e0\""
    },
    "AssetParameterse0eb358733b9110cd7375155a65d30b763648cd8f4f00617eafdad0f0f6606e0ArtifactHash226FE5D6": {
      "Type": "String",
      "Description": "Artifact hash for asset \"e0eb358733b9110cd7375155a65d30b763648cd8f4f00617eafdad0f0f6606e0\""
    },
    "AssetParametersb327ff16bfc8423a799a23eceaeea670c8744c46d212f0aeac64314dc479c907S3Bucket48B86FDB": {
      "Type": "String",
      "Description": "S3 bucket for asset \"b327ff16bfc8423a799a23eceaeea670c8744c46d212f0aeac64314dc479c907\""
    },
    "AssetParametersb327ff16bfc8423a799a23eceaeea670c8744c46d212f0aeac64314dc479c907S3VersionKey7AC6450C": {
      "Type": "String",
      "Description": "S3 key for asset version \"b327ff16bfc8423a799a23eceaeea670c8744c46d212f0aeac64314dc479c907\""
    },
    "AssetParametersb327ff16bfc8423a799a23eceaeea670c8744c46d212f0aeac64314dc479c907ArtifactHashC77B7AFE": {
      "Type": "String",
      "Description": "Artifact hash for asset \"b327ff16bfc8423a799a23eceaeea670c8744c46d212f0aeac64314dc479c907\""
    }
  },
  "Resources": {
    "iotcustomauthServiceRoleEEC43227": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "JwtIotCustomAuthorizerStack/iot-custom-auth/ServiceRole/Resource"
      }
    },
    "iotcustomauth599B8CB3": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameterse0eb358733b9110cd7375155a65d30b763648cd8f4f00617eafdad0f0f6606e0S3Bucket30E7C93C"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameterse0eb358733b9110cd7375155a65d30b763648cd8f4f00617eafdad0f0f6606e0S3VersionKeyC9BDD468"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameterse0eb358733b9110cd7375155a65d30b763648cd8f4f00617eafdad0f0f6606e0S3VersionKeyC9BDD468"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "iotcustomauthServiceRoleEEC43227",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_ACCOUNT": {
              "Ref": "AWS::AccountId"
            }
          }
        },
        "Handler": "lambda.handler",
        "Runtime": "nodejs12.x"
      },
      "DependsOn": [
        "iotcustomauthServiceRoleEEC43227"
      ],
      "Metadata": {
        "aws:cdk:path": "JwtIotCustomAuthorizerStack/iot-custom-auth/Resource",
        "aws:asset:path": "asset.e0eb358733b9110cd7375155a65d30b763648cd8f4f00617eafdad0f0f6606e0",
        "aws:asset:property": "Code"
      }
    },
    "iotcustomauthmqttServiceRoleF89F8C6D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "JwtIotCustomAuthorizerStack/iot-custom-auth-mqtt/ServiceRole/Resource"
      }
    },
    "iotcustomauthmqttF4800FFB": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersb327ff16bfc8423a799a23eceaeea670c8744c46d212f0aeac64314dc479c907S3Bucket48B86FDB"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersb327ff16bfc8423a799a23eceaeea670c8744c46d212f0aeac64314dc479c907S3VersionKey7AC6450C"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersb327ff16bfc8423a799a23eceaeea670c8744c46d212f0aeac64314dc479c907S3VersionKey7AC6450C"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "iotcustomauthmqttServiceRoleF89F8C6D",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_ACCOUNT": {
              "Ref": "AWS::AccountId"
            },
            "USERNAME": {
              "Ref": "username"
            },
            "PASSWORD": {
              "Ref": "password"
            },
            "TOKEN": {
              "Ref": "token"
            }
          }
        },
        "Handler": "lambda.handler",
        "Runtime": "nodejs12.x"
      },
      "DependsOn": [
        "iotcustomauthmqttServiceRoleF89F8C6D"
      ],
      "Metadata": {
        "aws:cdk:path": "JwtIotCustomAuthorizerStack/iot-custom-auth-mqtt/Resource",
        "aws:asset:path": "asset.b327ff16bfc8423a799a23eceaeea670c8744c46d212f0aeac64314dc479c907",
        "aws:asset:property": "Code"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Modules": "aws-cdk=1.119.0,@aws-cdk/assets=1.86.0,@aws-cdk/aws-applicationautoscaling=1.86.0,@aws-cdk/aws-autoscaling-common=1.86.0,@aws-cdk/aws-cloudwatch=1.86.0,@aws-cdk/aws-codeguruprofiler=1.86.0,@aws-cdk/aws-ec2=1.86.0,@aws-cdk/aws-ecr=1.86.0,@aws-cdk/aws-ecr-assets=1.86.0,@aws-cdk/aws-events=1.86.0,@aws-cdk/aws-iam=1.86.0,@aws-cdk/aws-kms=1.86.0,@aws-cdk/aws-lambda=1.86.0,@aws-cdk/aws-logs=1.86.0,@aws-cdk/aws-s3=1.86.0,@aws-cdk/aws-s3-assets=1.86.0,@aws-cdk/aws-sqs=1.86.0,@aws-cdk/aws-ssm=1.86.0,@aws-cdk/cloud-assembly-schema=1.86.0,@aws-cdk/core=1.86.0,@aws-cdk/cx-api=1.86.0,@aws-cdk/region-info=1.86.0,jsii-runtime=node.js/v16.3.0"
      },
      "Metadata": {
        "aws:cdk:path": "JwtIotCustomAuthorizerStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "lambdaArn": {
      "Description": "CustomAuth Arn",
      "Value": {
        "Fn::GetAtt": [
          "iotcustomauth599B8CB3",
          "Arn"
        ]
      }
    },
    "lambdaArnMqtt": {
      "Description": "CustomAuthMQTT Arn",
      "Value": {
        "Fn::GetAtt": [
          "iotcustomauthmqttF4800FFB",
          "Arn"
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}